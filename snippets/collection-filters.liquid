{% comment %}
  Collection filters with a price range slider.
  Usage: {% render 'collection-filters', results: collection %}
{% endcomment %}

{% liquid
  assign results = results | default: collection
%}

{% if results.filters.size > 0 %}
  <form id="FiltersForm" class="collection-filters">
    {% for filter in results.filters %}
      {% unless filter.label == 'Availability' %}
        <div class="filter-group">
          {% case filter.type %}
            {% when 'list' %}
              <span class="filter-label">{{ filter.label }}</span>
              <div class="filter-options">
                {% for value in filter.values %}
                  <label class="filter-value">
                    <input type="checkbox"
                      name="{{ value.param_name }}"
                      value="{{ value.value }}"
                      {% if value.active %}checked{% endif %}
                      {% if value.count == 0 and value.active == false %}disabled{% endif %}>
                    <span>{{ value.label }} ({{ value.count }})</span>
                  </label>
                {% endfor %}
              </div>
            {% when 'price_range' %}
              <span class="filter-label">{{ filter.label }}</span>
              <div class="price-slider">
                <input class="range-input" type="range" id="price-min" name="{{ filter.min_value.param_name }}" min="0" max="{{ filter.range_max }}" value="{{ filter.min_value.value | default: 0 }}">
                <input class="range-input" type="range" id="price-max" name="{{ filter.max_value.param_name }}" min="0" max="{{ filter.range_max }}" value="{{ filter.max_value.value | default: filter.range_max }}">
                <div class="price-values">
                  $<span id="min-display"></span> - $<span id="max-display"></span>
                </div>
              </div>
          {% endcase %}
        </div>
      {% endunless %}
    {% endfor %}
    <button type="submit" class="filter-apply">{{ 'products.facets.apply' | t }}</button>
  </form>
{% endif %}

{% stylesheet %}
.collection-filters {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  margin-bottom: 1rem;
  padding: 1rem;
  background: var(--color-card-bg, #f9f9f9);
  border-radius: 8px;
}
.filter-group {
  flex: 1 1 200px;
}
.filter-label {
  font-weight: 600;
  margin-bottom: 0.25rem;
  display: block;
}
.filter-options {
  display: grid;
  gap: 0.5rem;
}
.filter-value {
  display: flex;
  align-items: center;
  gap: 0.25rem;
}
.price-slider {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}
.range-input {
  -webkit-appearance: none;
  width: 100%;
  height: 4px;
  background: #ddd;
  border-radius: 2px;
}
.range-input::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: 16px;
  height: 16px;
  background: var(--color-accent, #1e1e1e);
  border-radius: 50%;
  cursor: pointer;
}
.price-values {
  white-space: nowrap;
  font-size: 0.875rem;
}
.filter-apply {
  margin-left: auto;
  padding: 0.5rem 1rem;
  background: var(--color-accent, #1e1e1e);
  color: #fff;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}
{% endstylesheet %}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    var min = document.getElementById('price-min');
    var max = document.getElementById('price-max');
    var minDisplay = document.getElementById('min-display');
    var maxDisplay = document.getElementById('max-display');

    function update(event) {
      var minVal = parseInt(min.value);
      var maxVal = parseInt(max.value);
      if (minVal > maxVal) {
        if (event && event.target === min) {
          max.value = minVal;
          maxVal = minVal;
        } else {
          min.value = maxVal;
          minVal = maxVal;
        }
      }
      if (minDisplay) minDisplay.textContent = minVal;
      if (maxDisplay) maxDisplay.textContent = maxVal;
    }

    if (min && max) {
      min.addEventListener('input', update);
      max.addEventListener('input', update);
      update();
    }
  });
</script>
